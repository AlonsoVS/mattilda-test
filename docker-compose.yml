services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: mattilda_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: mattilda_db
      POSTGRES_USER: mattilda_user
      POSTGRES_PASSWORD: mattilda_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db:/docker-entrypoint-initdb.d
    networks:
      - mattilda_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mattilda_user -d mattilda_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mattilda_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env.docker
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mattilda_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mattilda_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mattilda.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - mattilda_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  mattilda_network:
    driver: bridge
