version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: mattilda-db-dev
    environment:
      POSTGRES_DB: mattilda_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/docker/init-db:/docker-entrypoint-initdb.d
    networks:
      - mattilda-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: mattilda-backend-dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mattilda_db
      - SECRET_KEY=dev-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DEBUG=true
      - DB_ECHO=true
      - ENVIRONMENT=development
      - CORS_ORIGINS=http://localhost:5173,http://localhost:3000,http://frontend:5173
    volumes:
      - ./backend/app:/app/app
      - ./backend/tests:/app/tests
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mattilda-network
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: mattilda-frontend-dev
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/package.json:/app/package.json
      # Exclude node_modules to avoid conflicts
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - mattilda-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mattilda-network:
    driver: bridge
